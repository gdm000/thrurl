#
# Autogenerated by Thrift Compiler (0.9.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'checkin_service_types'

module CheckinService
  class Client
    include ::Thrift::Client

    def checkinsPerLocation(user)
      send_checkinsPerLocation(user)
      return recv_checkinsPerLocation()
    end

    def send_checkinsPerLocation(user)
      send_message('checkinsPerLocation', CheckinsPerLocation_args, :user => user)
    end

    def recv_checkinsPerLocation()
      result = receive_message(CheckinsPerLocation_result)
      return result.success unless result.success.nil?
      raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'checkinsPerLocation failed: unknown result')
    end

    def listLocations()
      send_listLocations()
      return recv_listLocations()
    end

    def send_listLocations()
      send_message('listLocations', ListLocations_args)
    end

    def recv_listLocations()
      result = receive_message(ListLocations_result)
      return result.success unless result.success.nil?
      raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'listLocations failed: unknown result')
    end

  end

  class Processor
    include ::Thrift::Processor

    def process_checkinsPerLocation(seqid, iprot, oprot)
      args = read_args(iprot, CheckinsPerLocation_args)
      result = CheckinsPerLocation_result.new()
      result.success = @handler.checkinsPerLocation(args.user)
      write_result(result, oprot, 'checkinsPerLocation', seqid)
    end

    def process_listLocations(seqid, iprot, oprot)
      args = read_args(iprot, ListLocations_args)
      result = ListLocations_result.new()
      result.success = @handler.listLocations()
      write_result(result, oprot, 'listLocations', seqid)
    end

  end

  # HELPER FUNCTIONS AND STRUCTURES

  class CheckinsPerLocation_args
    include ::Thrift::Struct, ::Thrift::Struct_Union
    USER = 1

    FIELDS = {
      USER => {:type => ::Thrift::Types::STRUCT, :name => 'user', :class => ::User}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class CheckinsPerLocation_result
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SUCCESS = 0

    FIELDS = {
      SUCCESS => {:type => ::Thrift::Types::MAP, :name => 'success', :key => {:type => ::Thrift::Types::STRUCT, :class => ::Location}, :value => {:type => ::Thrift::Types::LIST, :element => {:type => ::Thrift::Types::STRUCT, :class => ::Checkin}}}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ListLocations_args
    include ::Thrift::Struct, ::Thrift::Struct_Union

    FIELDS = {

    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class ListLocations_result
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SUCCESS = 0

    FIELDS = {
      SUCCESS => {:type => ::Thrift::Types::LIST, :name => 'success', :element => {:type => ::Thrift::Types::STRUCT, :class => ::Location}}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

end

